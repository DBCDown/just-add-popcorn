{"version":3,"sources":["hooks/useMovies.js","components/movies/MovieItem.js","hooks/useIntersectionObserver.js","components/Loader.js","hooks/useQuery.js","pages/MoviesPage.js","components/Nav.js","pages/MoviePage.js","components/BgCover.js","components/Hero.js","App.js","reportWebVitals.js","index.js"],"names":["useMovies","endpoint","params","useState","movie","setMovie","loading","setLoading","getMovies","a","axios","get","queryString","stringify","data","console","log","useEffect","MovieItem","className","to","id","src","medium_cover_image","alt","title","year","useIntersectionObserver","options","ref","useRef","isInView","setIsInView","observer","IntersectionObserver","entry","isIntersecting","current","observe","Loader","useQuery","URLSearchParams","useLocation","MoviesPage","query","useParams","rootMargin","sort_by","movies","movie_count","JSON","map","style","backgroundColor","height","Nav","MoviePage","movie_id","zIndex","position","description_full","genres","genre","torrents","torrent","href","url","target","rel","quality","hash","BgCover","Hero","textTransform","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b2f9d16.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport queryString from 'query-string'\r\nimport axios from \"axios\";\r\n\r\nconst useMovies = (endpoint, params) => {\r\n    const [movie, setMovie] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const getMovies = async () => {\r\n        try {\r\n            const {data} = (await axios.get(`https://yts.mx/api/v2/${endpoint}.json/?${queryString.stringify(params)}`)).data\r\n            setMovie(data)\r\n            setLoading(false)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovies()\r\n    }, [])\r\n\r\n\r\n    return [movie, loading]\r\n}\r\n\r\nexport default useMovies","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MovieItem = ({movie}) => {\r\n\r\n\r\n    return (\r\n        <div className={`movie__panel`}>\r\n            <Link to={`movie/${movie.id}`}>\r\n                <img className={`movie__cover`} src={movie.medium_cover_image} alt={movie.title}/>\r\n            </Link>\r\n            <h4>{movie.title}</h4>\r\n            {/*<ul>*/}\r\n            {/*    {*/}\r\n            {/*        movie.genres && movie.genres.map(gen => (*/}\r\n            {/*            <li key={gen}>*/}\r\n            {/*                <Link to={`movies?genre=${gen.toLowerCase()}`} className=\"mr-3\">{gen}</Link>*/}\r\n            {/*            </li>*/}\r\n            {/*        ))*/}\r\n            {/*    }*/}\r\n            {/*</ul>*/}\r\n            Year: {movie.year}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieItem","import {useEffect, useRef, useState} from 'react'\r\n\r\nconst useIntersectionObserver = (options) => {\r\n\r\n    const ref = useRef()\r\n    const [isInView, setIsInView] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(([entry]) => {\r\n            setIsInView(entry.isIntersecting)\r\n        }, options)\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current)\r\n        }\r\n\r\n        return () => {\r\n            // if (ref.current) {\r\n            //     observer.unobserve(ref.current)\r\n            // }\r\n        }\r\n\r\n    }, [ref, options])\r\n\r\n    return [\r\n        ref,\r\n        isInView\r\n    ]\r\n}\r\n\r\nexport default useIntersectionObserver","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader__wrapper\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation())\r\n}\r\n\r\nexport default useQuery","import React, { useState} from 'react'\r\nimport useMovies from \"../hooks/useMovies\";\r\nimport MovieItem from \"../components/movies/MovieItem\";\r\nimport useIntersectionObserver from \"../hooks/useIntersectionObserver\";\r\nimport Loader from \"../components/Loader\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport useQuery from \"../hooks/useQuery\";\r\n\r\nconst MoviesPage = () => {\r\n\r\n    const query = useQuery()\r\n    const params = useParams()\r\n    const [ref] = useIntersectionObserver({rootMargin: '-100px'})\r\n    const [pageNum] = useState(1)\r\n    const [movies, loading] = useMovies('list_movies', {\r\n        ...params,\r\n        sort_by: 'rating'\r\n        // page: pageNum,\r\n    })\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">Movie: {movies && movies.movie_count}</div>\r\n                {JSON.stringify(query)}\r\n            </div>\r\n            <div className=\"row\">\r\n                {\r\n                    movies.movies && movies.movies.map(movie => (\r\n                        <div key={movie.id} className={`md-col-3`}>\r\n                            <MovieItem movie={movie}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <Link className=\"btn btn--primary\" to={`/action` }>NEXT </Link>\r\n            </div>\r\n\r\n            {loading && (<Loader/>)}\r\n            <div ref={ref} style={{backgroundColor: 'teal', height: 400}}>\r\n                {/*{JSON.stringify(movies, null, 4)}*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesPage","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={`nav nav--shadow`}>\r\n            <ul className={`nav__links`}>\r\n                <li className={`nav__link`}><Link to={`/`}>HOME</Link></li>\r\n                <li className={`nav__link`}><Link to={`/`}>MOST POPULAR</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport useMovies from \"../hooks/useMovies\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst MoviePage = () => {\r\n\r\n    const params = useParams()\r\n\r\n    const [movies, loading] = useMovies('movie_details', {\r\n        movie_id: params.id\r\n    })\r\n\r\n    if (loading) return  <Loader/>\r\n\r\n    return (\r\n        <div className=\"movie__background\">\r\n            <div className={`wrapper`} style={{zIndex: 2, position: 'relative'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"md-col-3\">\r\n                        <img className=\"movie__cover\" src={movies.movie.medium_cover_image} alt={`${movies.movie.title} cover`}/>\r\n                    </div>\r\n                    <div className=\"md-col-6\">\r\n                        <h1 className=\"text--primary\">{movies.movie.title}</h1>\r\n                        <p>{movies.movie.description_full}</p>\r\n                        <div className=\"my-5\">\r\n                            <h3 className=\"mb-5\">Genres</h3>\r\n                            {\r\n                                movies.movie.genres && movies.movie.genres.map(genre => (\r\n                                    <Link to={`/`} key={genre} className=\"btn btn--xs btn--default\">\r\n                                        {genre}\r\n                                    </Link>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <h3 className=\"mb-5\">Download</h3>\r\n                            {\r\n                                movies.movie.torrents && movies.movie.torrents.map(torrent => (\r\n                                    <a href={torrent.url} key={torrent.hash} target=\"_blank\" rel=\"noreferrer\" className={`btn btn--primary`}>\r\n                                        {torrent.quality}\r\n                                    </a>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {/*<pre>{JSON.stringify(movies.movie, null, 4)}</pre>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst styles = {\r\n    background: {\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: 'var(--primary-color)',\r\n        height: '100vh'\r\n    }\r\n}\r\n\r\nexport default MoviePage","import React from 'react'\r\n\r\nconst BgCover = () => {\r\n    return (\r\n        <div className=\"bg-cover\" />\r\n    )\r\n}\r\n\r\nexport default BgCover","import React from 'react'\r\nimport Nav from \"./Nav\";\r\nimport BgCover from \"./BgCover\";\r\nconst Hero = () => {\r\n    return (\r\n        <div className=\"hero\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"md-col-6\">\r\n                        <h1 style={{textTransform: 'uppercase'}}>Just add popcorn</h1>\r\n                        <h4>Movie download and streaming</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Nav/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BgCover/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Hero","import {Switch, BrowserRouter, Route} from 'react-router-dom'\nimport MoviesPage from \"./pages/MoviesPage\";\nimport Nav from \"./components/Nav\";\nimport MoviePage from \"./pages/MoviePage\";\nimport Hero from \"./components/Hero\";\n\n\nconst App = () => {\n\n    return (\n        <BrowserRouter>\n            <Hero/>\n            <Switch>\n                <Route exact path={`/movie/:id`} component={MoviePage}/>\n                <Route exact path={`/movies?:query`} component={MoviesPage}/>\n                <Route exact path={`/`} component={MoviesPage}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/sass/style.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}